name: Build

on:
  workflow_dispatch:

jobs:
  push:
    runs-on: ubuntu-latest
    environment: build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
          repository: kartoza/docker-geoserver
          ref: v2.21.2
      - name: Setup Runner
        run: lscpu
      - name: LS
        run: ls -al
      - name: LS back
        run: cd ./../ && ls -al
      - name: Load ENV file
        run: grep -v '^#' .env >> $GITHUB_ENV
      - name: output-tag
        run: |
          echo "IMAGE_TAG=${{ env.GS_VERSION }}-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "IMAGE_TAG=${{ env.GS_VERSION }}-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Checkout GeoServer
        uses: actions/checkout@v3
        with:
          repository: geoserver/geoserver
          ref: ${{ env.GS_VERSION }}
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'
          cache: 'maven'
      - name: Build web-service-auth
        working-directory: /geoserver/src/community/web-service-auth
        run: |
          pwd
          mvn clean package -DskipTests=true
      - name: PWD
        run: pwd
      - name: Copy Overlay Resources
        run: | 
          mkdir ./custom_resources
          cp -r ./../geoserver-build/custom_resources ./../docker-geoserver
          mkdir -p ./../docker-geoserver/resources/overlays/usr/local/tomcat/webapps/geoserver/WEB-INF/lib && cp ./geoserver/src/community/web-service-auth/target/*.jar ./../docker-geoserver/resources/overlays/usr/local/tomcat/webapps/geoserver/WEB-INF/lib/
      - name: Update Dockerfile to copy in custom resources
        run: |
          echo "ADD custom_resources /custom_resources" >> ./../docker-geoserver/Dockerfile
      - name: Update start.sh script for custom resources
        run: |
          pwd
          echo "chmod +x /custom_resources/copy_custom_resources.sh" >> ./../docker-geoserver/scripts/start.sh
          echo "/custom_resources/copy_custom_resources.sh" >> ./../docker-geoserver/scripts/start.sh
      - name: Disable community and stable plugin installations
        run: |
          cat /dev/null > ./../docker-geoserver/build_data/stable_plugins.txt
          cat /dev/null > ./../docker-geoserver/build_data/community_plugins.txt
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PAT }}
      - name: Build Docker Image
        working-directory: ./../docker-geoserver/build_data
        run: |
          sudo docker build -t umeraltaf/geoserver:${{ env.IMAGE_TAG }} \
          --build-arg IMAGE_VERSION=${{ env.IMAGE_VERSION }} \
          --build-arg JAVA_HOME=${{ env.JAVA_HOME }} \
          --build-arg GS_VERSION=${{ env.GS_VERSION }} \
          --build-arg WAR_URL=${{ env.WAR_URL }} \
          --build-arg DOWNLOAD_ALL_STABLE_EXTENSIONS=${{ env.DOWNLOAD_ALL_COMMUNITY_EXTENSIONS }} \
          --build-arg STABLE_PLUGIN_BASE_URL=${{ env.STABLE_PLUGIN_BASE_URL }} .
      - name: Push to Repo
        run: docker image push umeraltaf/geoserver:"${{ env.IMAGE_TAG }}"