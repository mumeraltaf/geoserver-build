name: Build

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
jobs:
  push:
    runs-on: ubuntu-latest
    environment: build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
          repository: kartoza/docker-geoserver
          ref: v2.21.2
          path: docker-geoserver
      - name: Setup Runner
        run: lscpu
      - name: LS
        run: ls -al
      - name: LS back
        run: cd ./../ && ls -al
      - name: Load ENV file
        run: grep -v '^#'  $GITHUB_WORKSPACE/docker-geoserver/.env >> $GITHUB_ENV
      - name: output-tag
        run: |
          echo "IMAGE_TAG=${{ env.GS_VERSION }}-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "IMAGE_TAG=${{ env.GS_VERSION }}-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
#      - name: Checkout GeoServer
#        uses: actions/checkout@v3
#        with:
#          repository: geoserver/geoserver
#          ref: ${{ env.GS_VERSION }}
#          path: geoserver
#      - name: Set up JDK 11
#        uses: actions/setup-java@v3
#        with:
#          java-version: 11
#          distribution: 'temurin'
#      - name: Check Tree
#        run: |
#          echo $GITHUB_WORKSPACE
#          tree -L 2 $GITHUB_WORKSPACE
#      - name: Build web-service-auth
#        working-directory: ./geoserver/src/community/web-service-auth
#        run: |
#          mvn clean package -DskipTests=true
#      - name: PWD
#        run: pwd
#      - name: Copy Overlay Resources
#        run: |
#          pwd
#          ls
#          cp -r $GITHUB_WORKSPACE/custom_resources $GITHUB_WORKSPACE/docker-geoserver/
#          mkdir -p $GITHUB_WORKSPACE/docker-geoserver/resources/overlays/usr/local/tomcat/webapps/geoserver/WEB-INF/lib && cp ./geoserver/src/community/web-service-auth/target/*.jar $GITHUB_WORKSPACE/docker-geoserver/resources/overlays/usr/local/tomcat/webapps/geoserver/WEB-INF/lib/
#      - name: Update Dockerfile to copy in custom resources
#        run: |
#          pwd
#          echo "ADD custom_resources /custom_resources" >> $GITHUB_WORKSPACE/docker-geoserver/Dockerfile
#      - name: Update start.sh script for custom resources
#        run: |
#          pwd
#          ls
#          echo "chmod +x /custom_resources/copy_custom_resources.sh" >> $GITHUB_WORKSPACE/docker-geoserver/scripts/start.sh
#          echo "/custom_resources/copy_custom_resources.sh" >> $GITHUB_WORKSPACE/docker-geoserver/scripts/start.sh
      - name: Disable community and stable plugin installations
        run: |
          pwd
          ls
          cat /dev/null > $GITHUB_WORKSPACE/docker-geoserver/build_data/stable_plugins.txt
          cat /dev/null > $GITHUB_WORKSPACE/docker-geoserver/build_data/community_plugins.txt
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PAT }}
      - name: Build Docker Image
        run: |
          cd $GITHUB_WORKSPACE/docker-geoserver
          sudo docker build -t umeraltaf/geoserver:${{ env.IMAGE_TAG }} \
          --build-arg IMAGE_VERSION='tomcat:9.0.71-jdk11-temurin-focal'  \
          --build-arg JAVA_HOME='/opt/java/openjdk' .
      - name: Push to Repo
        run: docker image push umeraltaf/geoserver:"${{ env.IMAGE_TAG }}"